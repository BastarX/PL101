var endTime = function (time, expr) {var ti = 0;    var t = function(v) {	if (v.tag === 'seq')	{		if (v.left.tag === 'seq')		{		t(v.left);		}		if (v.left.tag === 'note')		{		ti = ti + v.left.dur;		}		if (v.right.tag === 'seq')		{		t(v.right);		}		if (v.right.tag === 'note')		{		ti = ti + v.right.dur;		}	}	if (v.tag === 'note')	{		ti = ti + v.dur;	}	return ti;	};	return time+t(expr);};var convertPitch = function(str){var sp = str.split("");var pi=0;switch(sp[0]){case 'c':	pi=0;	break;case 'd':	pi=2;	break;case 'e':	pi=4;	break;case 'f':	pi=5;	break;case 'g':	pi=7;	break;case 'a':	pi=9;	break;case 'b':	pi=11;	break;}return 12+12 * sp[1] + pi;//12 + 12 * octave + letterPitch}var compileT = function(expr,time,final){	if(expr.tag == 'note')	{		final.push({tag: 'note',pitch: convertPitch(expr.pitch), start: time, dur: expr.dur});		return time + expr.dur;	}		else if(expr.tag == 'seq')	{		return compileT(expr.right,compileT(expr.left,time,final),final);	}	else if(expr.tag == 'par')	{		return Math.max(compileT(expr.left, time, final), compileT(expr.right, time, final));	}	else if(expr.tag == 'rest')	{	return time+expr.duration;	}	else if(expr.tag == 'repeat')	{	var i = 0;		for (i=0;i<expr.count;i++)		{			return compileT(expr.section,time,final);		}	}};var compile = function (musexpr) {    var final = [];	compileT(musexpr,0,final);	return final;};var melody_mus =     { tag: 'seq',      left:        { tag: 'seq',         left: { tag: 'note', pitch: 'a4', dur: 250 },         right: { tag: 'note', pitch: 'b4', dur: 250 } },      right:       { tag: 'seq',         left: { tag: 'rest', duration: 100 },         right: { tag: 'note', pitch: 'd4', dur: 500 } } };		 var repeatm = 	{ tag: 'repeat',  section: { tag: 'note', pitch: 'c4', dur: 250 },  count: 3 }console.log(melody_mus);console.log("");console.log(compile(melody_mus));